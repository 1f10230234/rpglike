import turtle as t

t.speed(0)

t.shape('square')

t.resizemode("user")

t.ht()

t.penup()

stamps = 0

col = 0

x = 1280

y = 640

t.screensize(x,y)

color_list = ['black', 'red','purple', 'blue','green','yellow','orange','brown','gray',"white"]

detabase = {
  1:"0000100001111110000100000011110101010010100101011001100101101010",
  2:"0000000010000000100000101000001001000001010100010010000000000000",
  3:"0001100000000000001111000100001000000010000000100000110000010000",
  4:"0001100000000000000111000110100000010000001010000100100110000110",
  5:"0010000000110100111000100010000101111100101000101010001001000100",
  11:"0010000000100010111110100010010100100101010001000100010010011000",
  12:"0001000000111110110010000001111101100100000011000100000000111110",
  13:"0000010000001000000100000010000000100000000110000000010000000010",
  14:"0100010010000100100111111000010010000100100001001010010001001000",
  15:"0011110011000011000000010000001000000000011000001000000001111111",
  21:"0001000000010000000011111111100000000100000011000100000000111110",
  22:"0100000001000000010000000100000001000000010000100010001000011100",
  23:"0000010011111111000001000000110000010100000011000000100000010000",
  24:"0000010001000100010011111111010001000100010011000100000000111110",
  25:"0011110000001000000101110011100011001000000100000001000000001100",
  31:"0010000000111000111000000100111001000001010000001001000010001110",
  32:"0000100000001111111110000001000000111100010000100000001000011100",
  33:"0000000000011100011000101000000100000001000000100000110000110000",
  34:"0000001100011100111010000001000000010000000100000000100000000110",
  35:"1000000101000110001110000010000001000000010000000100000000111110",
  41:"0010010000100010111100010100010010000100100111000010011000011001",
  42:"0100111010010001100000001000000010000000101000001010100001000111",
  51:"0100010001000100100111111000010010000100101011001101011001001001",
  52:"0000000010010000011101000010011001000101010001000100010000111000",
  53:"0000010010000100010111000110101010110001101000111011010101001010",
  54:"0010000000110000111011100011000101100001011001011010101000100101",
  55:"0011110001010010100010011000100110001001100100010110001000001100",
  106:"0000000000000000000000000000000001100000100100000001000000100000",
  110:"0001000000010000001000000010000001011000011001011000010110000010",
  190:"1010000010100000000000000000000000000000000000000000000000000000",
  200:"0100000010100000010000000000000000000000000000000000000000000000",
  300:"0000000002200220222222222222222222222222022222200022220000022000",
  400:"5944499559444499559444495559944455555944555555995555555555555555",#map1l
  401:"5555555555555555995559994448444444484444995555995555555555555555",#map1r
  402:"5555599455599444559444445544444959444995544499555444995554444995",
  403:"4959449949594449955594445555594455555599555555555555555555555555",
  500:"0222222222222222088888880864466408644664086446640999999909999999",#house
  501:"2222222022222222888888804677768046777680467756809977799099777990",
  502:"0000000000000000000000020000002200000222000022220002222200222222",
  503:"0000000000000000200000002200000022200000222200002222200022222200"
}

conversion = {
  0:"a",
  1:"i",
  2:"u",
  3:"e",
  4:"o",
  5:"k",
  6:"s",
  7:"t",
  8:"n",
  9:"h",
  10:"m",
  11:"y",
  12:"r",
  13:"w",
  14:"l",
  15:"g",
  16:"z",
  17:"d",
  18:" ",
  19:"b",
  20:"p",
}

def print_text(s,x,y,sz):
  global col
  global nx
  global ny
  t.goto(x+10*sz,y-10*sz)
  a = 0
  global stamps
  print_text = detabase[s]
  for l in range(64):
    if print_text[l] == "/":
        break
    if int(print_text[l]) != 0:
      for b in range(len(color_list)):
        if int(print_text[l]) == b+1:
          t.color(color_list[b + col])
      t.stamp()
      stamps += 1
    t.fd(20*sz)
    a += 1
    if a%8 == 0:
      t.goto(x+10*sz,t.ycor()-20*sz)
  nx += (160 + 20 * margin) * sz


def print_text_start(x,y,sz,mar,tex):
  global nx 
  nx = x
  global ny
  ny = y
  global margin
  margin = mar
  text = tex
  global stamps
  stamps = 0
  t.shapesize(sz,sz,0)  #1->20*20
  a = 0
  wid = 0
  time = 0
  
  while a < len(text):
    if text[a] == "/":
      command = "0"
      a += 1
      while text[a] != "/":
        command += text[a]
        a += 1 
      print_text(int(command),nx,ny,sz)
      a += 1
      continue
    elif text[a] == "*":
      a += 1
      global col
      col = int(text[a])
      a += 1
      continue
    elif text[a] == "%":
      a += 1
      time = 1
      continue

    else:
      wid += 1
      print(text[a])
      for m in range(21):
        if text[a] == conversion[m]:
          if m <= 4:
            print("a")
            print_text(m+1,nx,ny,sz)
            a -= 1
            break

          else:
            if text[a] == conversion[8] and text[a+1] == conversion[8]:
              print("nn")
              print_text(110,nx,ny,sz)
              break
              
            if text[a+1] == text[a]:
              print("ltu")
              print_text(106,nx,ny,sz)
              a -= 1
              break
              
            if (text[a] == conversion[14] and #nnna->んな　っな->ltuna
                  text[a+1] == conversion[7] and 
                  text[a+2] == conversion[2]):
              print("ltu")
              print_text(106,nx,ny,sz)
              a += 1
              break

            if m == 18:
              nx += 160 + 20 * margin * sz
              a -= 1
            
            if 14 < m < 20:
              print(m)
              for n in range(5):
                if text[a+1] == conversion[n]:
                  print("ga")
                  print_text((m-14)*10+n+1,nx,ny,sz)
                  break
              print_text(190,nx,ny,sz)
              break
            
            if m == 20:
              for n in range(5):
                if text[a+1] == conversion[n]:
                  print("pa")
                  print_text((m-15)*10+n+1,nx,ny,sz)
                  break
              print_text(200,nx,ny,sz)
              break
              
            if 5 <= m <= 13:
              for n in range(5):
                if text[a+1] == conversion[n]:
                  print("ka")
                  print_text((m-4)*10+n+1,nx,ny,sz)
                  break
              break
          
      a += 2
  if time != 0:
    t.speed(1)
    t.fd(10)
    t.speed(0)
    t.clearstamps(-1*stamps)
    stamps = 0
    